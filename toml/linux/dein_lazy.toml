# 必ずしも起動時に必要でないプラグインは
# 利用条件と共にこちらで入れる

# 補完プラグイン
# インサートモード時に呼び出す
[[plugins]]
repo  = 'Shougo/neocomplete'
on_i  = 1
hook_add = '''
  source ~/.vim/userautoload/plugins/basic/plugin-neocomplete.vim
'''
if    = ' !has("nvim") '

# 以下のファイルは、環境に併せてコメントを外してインストールすること

# 特定のファイルタイプで読み込む
## Markdown
[[plugins]]
repo  = 'plasticboy/vim-markdown'
on_ft = 'markdown'

# JS シンタックスハイライト
[[plugins]]
repo  = 'pangloss/vim-javascript'
on_ft = 'javascript'
# JavaScript
# ES6のシンタックスを当てる
[[plugins]]
repo  = 'jelera/vim-javascript-syntax'
on_ft = ['javascript', 'javascript.jsx']
build = 'npm install'

## jsの補完プラグイン
# [[plugins]]
# repo  = 'mattn/jscomplete-vim'
# on_ft = 'javascript'
# [[plugins]]
# repo  = 'ternjs/tern_for_vim'
# on_ft = ['javascript', 'javascript.jsx']
# merged = 0
[[plugins]]
repo  = 'carlitux/deoplete-ternjs'
on_ft = ['javascript', 'javascript.jsx']
on_ft = ' has("nvim") '
build = 'npm install -g tern'
merged = 0
# hook_post_source = '''
#   source ~/.vim/userautoload/plugins/pg-lang/javascript/plugin-deoplete-ternjs
# '''

## gfでrequire()のモジュールにジャンプ
[[plugins]]
repo  = 'moll/vim-node'
on_ft = ['javascript', 'javascript.jsx']
hook_post_source = '''
  source ~/.vim/userautoload/plugins/pg-lang/javascript/plugin-javascript.vim
'''

## node.jsの補完
[[plugins]]
repo  = 'myhere/vim-nodejs-complete'
on_ft = ['javascript', 'javascript.jsx']

## function行、もしくは:JsDocでJSDocコメントができる
[[plugins]]
repo  = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'javascript.jsx']

## node用の辞書
[[plugins]]
repo  = 'guileen/vim-node-dict'
on_ft = 'javascript'
hook_source = '''
  source ~/.vim/userautoload/plugins/pg-lang/javascript/plugin-javascript.vim
'''

# jsxのシンタックスプラグイン
# [[plugins]]
# repo  = 'mxw/vim-jsx'
# on_ft = 'javascript'
# こちらのほうが正しくハイライトされる
[[plugins]]
repo  = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']

# Python
[[plugins]]
repo  = 'davidhalter/jedi-vim'
on_ft = 'python'

# [[plugins]]
# repo  = 'jmcantrell/vim-virtualenv'
# on_ft = 'python'

[[plugins]]
repo  = 'hachibeeDI/python_hl_lvar.vim'
on_ft = 'python'

# [[plugins]]
# repo  = 'kana/vim-textobj-indent'
# on_ft = 'python'
#
# [[plugins]]
# repo  = 'bps/vim-textobj-python'
# on_ft = 'python'
# depends  = ['vim-textobj-user']

# [[plugins]]
# repo  = 'kana/vim-smartinput'
# on_ft = 'python'

#[[plugins]]
#repo  = '/Flake8-vim'
#on_ft = 'python'

# to use
# cabal update
# cabal install happy
# export PATH="$HOME/.cabal/bin:$PATH"
# cabal install ghc-mod
[[plugins]]
repo  = 'eagletmt/ghcmod-vim'
on_ft = 'haskell'

# Haskellの補完プラグイン
[[plugins]]
repo  = 'ujihisa/neco-ghc'
on_ft = 'haskell'

# シンタックス
[[plugins]]
repo  = 'dag/vim2hs'
on_ft = 'haskell'

# hoogle
# cabal install hoogle が必要
[[plugins]]
repo  = 'thinca/vim-ref'
on_ft = 'haskell'
[[plugins]]
repo  = 'ujihisa/ref-hoogle'
on_ft = 'haskell'

# # C lang
# [[plugins]]
# repo  = 'justmao945/vim-clang'
# on_ft = ['c', 'cpp']
# hook_add = '''
#     source ~/.vim/userautoload/plugins/pg-lang/c/plugin-vim-clang.vim
# '''
[[plugins]]
repo  = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp', 'cmake']
hook_add = '''
    source ~/.vim/userautoload/plugins/pg-lang/c/plugin-deoplete-clang.vim
'''

#########################
# for nvim
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
    source ~/.vim/userautoload/plugins/neovim/hook_add/plugin-denite.vim
'''
hook_post_source = '''
    source ~/.vim/userautoload/plugins/neovim/hook_post_source/plugin-denite.vim
'''
if   = ' has("nvim") && has("python3") '

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    source ~/.vim/userautoload/plugins/neovim/hook_add/plugin-deoplete.vim
'''
if   = ' has("nvim") && has("python3") '
on_i = 1

# Rコンソール
[[plugins]]
repo  = 'jalvesaq/Nvim-R'
on_ft = 'r'
hook_add = '''
    source ~/.vim/userautoload/plugins/pg-lang/R/plugin-nvim-r.vim
'''
if    = ' has("nvim") '

# Python補完
[[plugins]]
repo = 'zchee/deoplete-jedi'
if   = ' has("nvim") '
on_ft = 'python'
hook_source = '''
    source ~/.vim/userautoload/plugins/pg-lang/python/plugin-deoplete-jedi.vim
'''

#[[plugins]]
#repo = 'nixprime/cpsm'
#if   = ' has("nvim") && has("python3") '
#hook_add = '''
#    source ~/.vim/userautoload/plugins/neovim/hook_add/plugin-cpsm.vim
#'''
#build = 'mkdir -p build && cd build && make -DPY3 .. && make install'
#if    = ' has("nvim") '
